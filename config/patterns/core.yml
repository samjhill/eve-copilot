# EVE Copilot - Core Log Parsing Patterns
# These regex patterns convert raw EVE log lines to structured events
# Based on actual EVE Online combat log format

# Game notification events (what EVE actually logs)
spatial_phenomena:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+Local\\s+spatial\\s+phenomena\\s+may\\s+cause\\s+strange\\s+effects\\s+on\\s+your\\s+ship\\s+systems\\."
  event_type: "SPATIAL_PHENOMENA"
  groups: ["timestamp"]
  description: "Local spatial phenomena detected (Abyssal effect)"

# Abyssal deadspace entry detection
abyss_entry:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+You\\s+have\\s+entered\\s+an\\s+Abyssal\\s+Deadspace"
  event_type: "ABYSS_ENTRY"
  groups: ["timestamp"]
  description: "Entered an Abyssal Deadspace pocket"

# NEW: Wave transition "Please wait..." message
wave_transition_wait:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+Please\\s+wait\\.\\.\\."
  event_type: "WAVE_TRANSITION_WAIT"
  groups: ["timestamp"]
  description: "Wave transition in progress (Please wait message)"

# Navigation events
warp_start:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+Warping\\s+to\\s+([^,]+),"
  event_type: "WARP_START"
  groups: ["timestamp", "destination"]
  description: "Warp started to destination"

warp_end:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+Warp\\s+complete"
  event_type: "WARP_END"
  groups: ["timestamp"]
  description: "Warp completed"

dock_request:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+Requesting\\s+docking\\s+permission"
  event_type: "DOCK_REQUEST"
  groups: ["timestamp"]
  description: "Docking permission requested"

undock_request:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+Undocking\\s+from\\s+([^,]+)"
  event_type: "UNDOCK_REQUEST"
  groups: ["timestamp", "station"]
  description: "Undocking from station"

docked:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+Docked\\s+at\\s+([^,]+)"
  event_type: "DOCKED"
  groups: ["timestamp", "station"]
  description: "Successfully docked at station"

undocked:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+Undocked\\s+from\\s+([^,]+)"
  event_type: "UNDOCKED"
  groups: ["timestamp", "station"]
  description: "Successfully undocked from station"

jump_gate:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+Jumping\\s+through\\s+([^,]+)"
  event_type: "JUMP_GATE"
  groups: ["timestamp", "gate"]
  description: "Jumping through stargate"

jump_wormhole:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+Jumping\\s+through\\s+wormhole"
  event_type: "JUMP_WORMHOLE"
  groups: ["timestamp"]
  description: "Jumping through wormhole"

# Fleet events
fleet_join:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+You\\s+have\\s+joined\\s+fleet"
  event_type: "FLEET_JOIN"
  groups: ["timestamp"]
  description: "Joined fleet"

fleet_leave:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+You\\s+have\\s+left\\s+fleet"
  event_type: "FLEET_LEAVE"
  groups: ["timestamp"]
  description: "Left fleet"

fleet_warp:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+Fleet\\s+warp\\s+to\\s+([^,]+)"
  event_type: "FLEET_WARP"
  groups: ["timestamp", "destination"]
  description: "Fleet warp initiated"

# Chat events
local_chat:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(local\\)\\s+([^:]+):\\s+(.+)"
  event_type: "LOCAL_CHAT"
  groups: ["timestamp", "sender", "message"]
  description: "Local chat message"

fleet_chat:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(fleet\\)\\s+([^:]+):\\s+(.+)"
  event_type: "FLEET_CHAT"
  groups: ["timestamp", "sender", "message"]
  description: "Fleet chat message"

corp_chat:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(corp\\)\\s+([^:]+):\\s+(.+)"
  event_type: "CORP_CHAT"
  groups: ["timestamp", "sender", "message"]
  description: "Corporation chat message"

alliance_chat:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(alliance\\)\\s+([^:]+):\\s+(.+)"
  event_type: "ALLIANCE_CHAT"
  groups: ["timestamp", "sender", "message"]
  description: "Alliance chat message"

# Boss detection patterns (must come before general damage patterns)
karybdis_tyrannos_detected:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(combat\\)\\s+<color=0xffcc0000><b>(\\d+)</b>\\s+<color=0x77ffffff><font\\s+size=10>from</font>\\s+<b><color=0xffffffff>Karybdis Tyrannos</b>.*?\\s+-\\s+(Hits|Smashes|Penetrates|Grazes|Glances)"
  event_type: "KARYBDIS_TYRANNOS_DETECTED"
  groups: ["timestamp", "damage", "damage_type"]
  description: "Karybdis Tyrannos boss detected - critical threat"

karybdis_tyrannos_outgoing:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(combat\\)\\s+<color=0xff00ffff><b>(\\d+)</b>\\s+<color=0x77ffffff><font\\s+size=10>to</font>\\s+<b><color=0xffffffff>Karybdis Tyrannos</b>.*?\\s+-\\s+(Hits|Smashes|Penetrates|Grazes|Glances)"
  event_type: "KARYBDIS_TYRANNOS_OUTGOING"
  groups: ["timestamp", "damage", "damage_type"]
  description: "Damage dealt to Karybdis Tyrannos boss"

# Combat damage events (incoming damage) - FIXED to include various damage types
incoming_damage:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(combat\\)\\s+<color=0xffcc0000><b>(\\d+)</b>\\s+<color=0x77ffffff><font\\s+size=10>from</font>\\s+<b><color=0xffffffff>([^<]+)</b>.*?\\s+-\\s+(Hits|Smashes|Penetrates|Grazes|Glances)"
  event_type: "INCOMING_DAMAGE"
  groups: ["timestamp", "damage", "from_entity", "damage_type"]
  description: "You take damage from an enemy"

# Combat damage events (outgoing damage) - FIXED to include various damage types
outgoing_damage:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(combat\\)\\s+<color=0xff00ffff><b>(\\d+)</b>\\s+<color=0x77ffffff><font\\s+size=10>to</font>\\s+<b><color=0xffffffff>([^<]+)</b>.*?\\s+-\\s+(Hits|Smashes|Penetrates|Grazes|Glances)"
  event_type: "OUTGOING_DAMAGE"
  groups: ["timestamp", "damage", "target_entity", "damage_type"]
  description: "You deal damage to an enemy"

# Module loading notifications
module_loading:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+Loading\\s+the\\s+([^;]+);\\s+this\\s+will\\s+take\\s+approximately\\s+(\\d+)\\s+seconds\\."
  event_type: "MODULE_LOADING"
  groups: ["timestamp", "module", "duration"]
  description: "Module is loading ammo/charges"

# Module deactivation notifications
module_deactivation:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+([^\\s]+(?:\\s+[^\\s]+)*?)\\s+deactivates\\s+as\\s+the\\s+item\\s+it\\s+was\\s+targeted\\s+at\\s+is\\s+no\\s+longer\\s+present\\."
  event_type: "MODULE_DEACTIVATED"
  groups: ["timestamp", "module"]
  description: "Module deactivates when target is destroyed"

# Cargo approach notifications
cargo_approach:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+Cargo\\s+is\\s+too\\s+far\\s+away\\.\\s+Ship\\s+is\\s+on\\s+automatic\\s+approach\\s+to\\s+cargo\\."
  event_type: "CARGO_APPROACH"
  groups: ["timestamp"]
  description: "Ship automatically approaching cargo"

# Target limit notifications
target_limit:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+You\\s+are\\s+already\\s+managing\\s+(\\d+)\\s+targets,\\s+as\\s+many\\s+as\\s+your\\s+ship's\\s+electronics\\s+are\\s+capable\\s+of\\."
  event_type: "MODULE_ACTIVATED"
  groups: ["timestamp", "target_count"]
  description: "Maximum targets reached"

# Ship stopping notifications
ship_stopping:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+Ship\\s+stopping"
  event_type: "MODULE_DEACTIVATED"
  groups: ["timestamp"]
  description: "Ship is stopping movement"

# Module manual deactivation warnings
module_manual_deactivation:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+The\\s+([^\\s]+(?:\\s+[^\\s]+)*?)\\s+cannot\\s+be\\s+manually\\s+deactivated\\s+in\\s+the\\s+middle\\s+of\\s+an\\s+operation"
  event_type: "MODULE_ACTIVATED"
  groups: ["timestamp", "module"]
  description: "Module cannot be manually deactivated during operation"

# Legacy patterns (keeping for compatibility)
drone_hit:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(combat\\)\\s+<color=0xffcc0000><b>(\\d+)</b>\\s+<color=0x77ffffff><font\\s+size=10>from</font>\\s+<b><color=0xffffffff>([^<]+)</b>.*?\\s+-\\s+(Hits|Smashes|Penetrates|Grazes|Glances).*?<color=0xff00ffff><b>\\d+</b>\\s+<color=0x77ffffff><font\\s+size=10>to</font>\\s+<b><color=0xffffffff>([^<]+)</b>.*?\\s+-\\s+([^-]+)\\s+(Hits|Smashes|Penetrates|Grazes|Glances)"
  event_type: "DRONE_HIT"
  groups: ["timestamp", "damage", "from_entity", "damage_type", "drone_name", "drone_type", "drone_hit_type"]
  description: "Your drone takes damage from an enemy"

drone_destroyed:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+Your\\s+([\\w\\s]+)\\s+has\\s+been\\s+destroyed"
  event_type: "DRONE_DESTROYED"
  groups: ["timestamp", "drone_name"]
  description: "Your drone is destroyed"

# Drone damage detection - detect when drones are mentioned in combat logs
drone_damage:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(combat\\)\\s+<color=0xff00ffff><b>(\\d+)</b>\\s+<color=0x77ffffff><font\\s+size=10>to</font>\\s+<b><color=0xffffffff>([^<]+)</b>.*?\\s+-\\s+([^-]+)\\s+(Hits|Smashes|Penetrates|Grazes|Glances)"
  event_type: "DRONE_HIT"
  groups: ["timestamp", "damage", "target", "drone_type", "hit_type"]
  description: "Your drone is dealing damage"

# E-war events
you_scrammed:
  regex: "(\\d{4}\\.\\d{2}\\.\\d{2} \\d{2}:\\d{2}:\\d{2})\\s+You\\s+are\\s+warp\\s+scrambled\\s+by\\s+(\\w+)"
  event_type: "YOU_SCRAMMED"
  groups: ["timestamp", "entity"]
  description: "You are warp scrambled by an enemy"

you_webbed:
  regex: "(\\d{4}\\.\\d{2}\\.\\d{2} \\d{2}:\\d{2}:\\d{2})\\s+You\\s+are\\s+webbed\\s+by\\s+(\\w+)"
  event_type: "YOU_WEBBED"
  groups: ["timestamp", "entity"]
  description: "You are webbed by an enemy"

you_neuted:
  regex: "(\\d{4}\\.\\d{2}\\.\\d{2} \\d{2}:\\d{2}:\\d{2})\\s+You\\s+are\\s+energy\\s+neutralized\\s+by\\s+(\\w+)"
  event_type: "YOU_NEUTED"
  groups: ["timestamp", "entity"]
  description: "You are energy neutralized by an enemy"

# Energy neutralization from combat log
energy_neutralization:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(combat\\)\\s+<color=0xffe57f7f><b>(\\d+)\\s+GJ</b><color=0x77ffffff><font\\s+size=10>\\s+energy\\s+neutralized\\s+</font><b><color=0xffffffff>([^<]+)</b>"
  event_type: "ENERGY_NEUTRALIZATION"
  groups: ["timestamp", "amount", "from_entity"]
  description: "Energy neutralized by enemy"

# Equipment events
reload_required:
  regex: "(\\d{4}\\.\\d{2}\\.\\d{2} \\d{2}:\\d{2}:\\d{2})\\s+([\\w\\s]+)\\s+requires\\s+reload"
  event_type: "RELOAD_REQUIRED"
  groups: ["timestamp", "module"]
  description: "A module requires reloading"

charges_depleted:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(notify\\)\\s+([^\\s]+(?:\\s+[^\\s]+)*?)\\s+has\\s+run\\s+out\\s+of\\s+charges"
  event_type: "CHARGES_DEPLETED"
  groups: ["timestamp", "module"]
  description: "Module has run out of charges/ammo"

# Status events
shield_low:
  regex: "(\\d{4}\\.\\d{2}\\.\\d{2} \\d{2}:\\d{2}:\\d{2})\\s+Shield\\s+level\\s+(\\d+)%"
  event_type: "SHIELD_LOW"
  groups: ["timestamp", "shield_percent"]
  description: "Shield level is low"

cap_low:
  regex: "(\\d{4}\\.\\d{2}\\.\\d{2} \\d{2}:\\d{2}:\\d{2})\\s+Capacitor\\s+level\\s+(\\d+)%"
  event_type: "CAP_LOW"
  groups: ["timestamp", "cap_percent"]
  description: "Capacitor level is low"

# Module activation events
module_activated:
  regex: "(\\d{4}\\.\\d{2}\\.\\d{2} \\d{2}:\\d{2}:\\d{2})\\s+([\\w\\s]+)\\s+activated"
  event_type: "MODULE_ACTIVATED"
  groups: ["timestamp", "module"]
  description: "A module is activated"

module_deactivated:
  regex: "(\\d{4}\\.\\d{2}\\.\\d{2} \\d{2}:\\d{2}:\\d{2})\\s+([\\w\\s]+)\\s+deactivated"
  event_type: "MODULE_DEACTIVATED"
  groups: ["timestamp", "module"]
  description: "A module is deactivated"

# Missile reload completion detection - detect when missiles start firing again after loading
missile_reload_complete:
  regex: "\\[\\s+(\\d{4}\\.\\d{2}\\.\\d{2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+\\]\\s+\\(combat\\)\\s+<color=0xff00ffff><b>(\\d+)</b>\\s+<color=0x77ffffff><font\\s+size=10>to</font>\\s+<b><color=0xffffffff>([^<]+)</b><font\\s+size=10><color=0x77ffffff>\\s+-\\s+([^-]+)\\s+Missile\\s+-\\s+(Hits|Smashes|Penetrates|Grazes|Glances|Glances Off)"
  event_type: "MISSILE_RELOAD_COMPLETE"
  groups: ["timestamp", "damage", "target", "missile_type", "hit_type"]
  description: "Missile launcher is firing again after reload - indicates reload complete"


